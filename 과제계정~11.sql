--1
CREATE TABLE TB_CATEGORY  
(
  NAME VARCHAR2(10)
, USE_YN CHAR(1) CHECK(USE_YN IN ('Y'))
);
--2
CREATE TABLE TB_CLASS_TYPE
(
  NO VARCHAR2(5) PRIMARY KEY
, NAME VARCHAR2(10)
);
--3
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);
--4
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME CONSTRAINT NAME_NULL NOT NULL;
--5
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME VARCHAR2(20)
MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2 (20);
--6
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASSTYPE_NAME;
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASSTYPE_NO;
--7
ALTER TABLE TB_CATEGORY
RENAME CONSTRAINT SYS_C007454 TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C007455 TO PK_CLASSTYPE_NO; 
--8
INSERT
  INTO TB_CATEGORY
(
  CATEGORY_NAME
, USE_YN
)
VALUES
(
 '공학'
,'Y'
);
--
INSERT
  INTO TB_CATEGORY
(
  CATEGORY_NAME
, USE_YN
)
VALUES
(
 '자연과학'
,'Y'
);
--
INSERT
  INTO TB_CATEGORY
(
  CATEGORY_NAME
, USE_YN
)
VALUES
(
 '의학'
,'Y'
);
--
INSERT
  INTO TB_CATEGORY
(
  CATEGORY_NAME
, USE_YN
)
VALUES
(
 '예체능'
,'Y'
);
--
INSERT
  INTO TB_CATEGORY
(
  CATEGORY_NAME
, USE_YN
)
VALUES
(
 '인문사회'
,'Y'
);
COMMIT;
-- 9
-- 컬럼 레벨인 경우
-- 컬럼명 자료형(크기) [CONSTRAINT 제약 조건명] REFERENCES 참조테이블명 [(참조컬럼명)] [삭제룰]
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);
--10
GRANT CREATE VIEW TO C##HOMEWORK;
CREATE OR REPLACE VIEW VW_학생일반정보
AS
SELECT
  STUDENT_NO
, STUDENT_NAME
, STUDENT_ADDRESS
 FROM TB_STUDENT;
--11
CREATE OR REPLACE VIEW VW_지도면담
AS
SELECT
        S.STUDENT_NAME
      , D.DEPARTMENT_NAME
      , NVL(P.PROFESSOR_NAME, '지도교수미지정') "지도교수"
  FROM TB_STUDENT S
  JOIN TB_PROFESSOR P ON(P.PROFESSOR_NO = S.COACH_PROFESSOR_NO)
  JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = S.DEPARTMENT_NO)
  ORDER BY CATEGORY;
--12
CREATE OR REPLACE VIEW VW_학과별학생수
AS
SELECT
        D.DEPARTMENT_NAME
      , COUNT(*) "STUDENT_COUNT"
   FROM TB_DEPARTMENT D
   JOIN TB_STUDENT S ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
   GROUP BY D.DEPARTMENT_NAME;
--13
UPDATE 
     VW_학생일반정보
SET STUDENT_NAME = '이진호'
WHERE STUDENT_NO = 'A213046';
--14
CREATE OR REPLACE VIEW VW_학생일반정보
AS
SELECT
  STUDENT_NO
, STUDENT_NAME
, STUDENT_ADDRESS
 FROM TB_STUDENT
 WITH READ ONLY;
--1
INSERT
  INTO TB_CLASS_TYPE
(
  CLASSTYPE_NO
, CLASSTYPE_NAME
)
VALUES
(
  '01'
, '전공필수'
);
--
INSERT
  INTO TB_CLASS_TYPE
(
  CLASSTYPE_NO
, CLASSTYPE_NAME
)
VALUES
(
  '02'
, '전공선택'
);
INSERT
  INTO TB_CLASS_TYPE
(
  CLASSTYPE_NO
, CLASSTYPE_NAME
)
VALUES
(
  '03'
, '교양필수'
);
INSERT
  INTO TB_CLASS_TYPE
(
  CLASSTYPE_NO
, CLASSTYPE_NAME
)
VALUES
(
  '04'
, '교양선택'
);
INSERT
  INTO TB_CLASS_TYPE
(
  CLASSTYPE_NO
, CLASSTYPE_NAME
)
VALUES
(
  '05'
, '논문지도'
);
--2
CREATE TABLE TB_학생일반정보
AS
SELECT
        STUDENT_NO 학번
      , STUDENT_NAME 학생이름
      , STUDENT_ADDRESS 주소
    FROM TB_STUDENT;
--3
CREATE TABLE TB_국어국문학과
(
  학번 VARCHAR(20)
, 학생이름 VARCHAR(20)
, 출생년도 VARCHAR(30)
, 교수이름 VARCHAR(30)
 );
INSERT
  INTO TB_국어국문학과
(
  학번
, 학생이름
, 출생년도
, 교수이름
)
(
SELECT
        S.STUDENT_NO
      , S.STUDENT_NAME
      , SUBSTR(S.STUDENT_SSN,1 ,2)+1900
      , P.PROFESSOR_NAME
  FROM TB_STUDENT S
  JOIN TB_PROFESSOR P ON(P.DEPARTMENT_NO = S.DEPARTMENT_NO)
  JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = P.DEPARTMENT_NO)
  WHERE DEPARTMENT_NAME = '국어국문학과');
--4
UPDATE 
       TB_DEPARTMENT
 SET CAPACITY = ROUND(CAPACITY * 1.1);
--5
UPDATE 
       TB_STUDENT
  SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
  WHERE STUDENT_NO = 'A413042';
--6
COMMIT;
UPDATE
      TB_STUDENT
  SET STUDENT_SSN = SUBSTR(STUDENT_SSN, 1, INSTR(STUDENT_SSN, '-')-1);
--7
UPDATE 
        TB_GRADE G
 SET G.POINT = 3.5
 WHERE TERM_NO = '200501'
 AND STUDENT_NO =(   SELECT
                             STUDENT_NO
                          FROM TB_STUDENT
                          JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                          JOIN TB_CLASS USING(DEPARTMENT_NO)
                          WHERE DEPARTMENT_NAME = '의학과'
                            AND STUDENT_NAME = '김명훈'
                            AND CLASS_NAME = '피부생리학');
                
COMMIT;
--8
DELETE
  FROM TB_GRADE
  WHERE STUDENT_NO IN( SELECT
                            DISTINCT(STUDENT_NO)
                            FROM TB_GRADE
                            JOIN TB_STUDENT USING(STUDENT_NO)
                            WHERE ABSENCE_YN = 'Y');
COMMIT;
                
                